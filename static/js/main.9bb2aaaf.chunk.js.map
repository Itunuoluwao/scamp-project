{"version":3,"sources":["Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","App.module.css","../node_modules/moment/src/lib/locale sync","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","Components/Cards/Cards.jsx","Components/Header/Header.js","Components/Footer/Footer.js","App.js","index.js","Components/Cards/Cards.module.css"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","url","fetchData","country","a","changeableUrl","axios","get","data","theData","pop","confirmed","Confirmed","recovered","Recovered","deaths","Deaths","lastUpdate","Date","Global","TotalConfirmed","TotalRecovered","TotalDeaths","fetchDailyData","Countries","map","date","fetchCountries","city","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","handleCountryChange","countries","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","target","value","i","key","Slug","Country","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toDateString","Header","AppBar","position","style","boxShadow","padding","fontSize","Toolbar","classname","Component","Footer","App","state","setState","this","Cards","CountryPicker","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bb2aaaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3Ku4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__22Mda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2cu2X\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 144;","import axios from 'axios';\r\n\r\nconst url = 'https://api.covid19api.com/';\r\n\r\nexport const fetchData = async (country) => {\r\n  try {\r\n\r\n    if(country) {\r\n      const changeableUrl = `${url}total/country/${country}`;\r\n      const { data } = await axios.get(changeableUrl);\r\n      const theData = data.pop();\r\n      return {confirmed:theData.Confirmed, recovered:theData.Recovered, deaths: theData.Deaths, lastUpdate: theData.Date };\r\n      \r\n    } else {\r\n        const { data: { Global, Date } } = await axios.get(`${url}summary`);\r\n\r\n        return { confirmed: Global.TotalConfirmed, recovered:Global.TotalRecovered, deaths: Global.TotalDeaths, lastUpdate: Date };\r\n\r\n    }\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data: { Countries } } = await axios.get(`${url}summary`);\r\n\r\n    return Countries.map(({ TotalConfirmed, TotalDeaths, Date }) => ({ confirmed: TotalConfirmed, deaths: TotalDeaths, date:Date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    \r\n    const { data: city  } = await axios.get(`${url}countries`);\r\n    return city;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n  \r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed, recovered, deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : <h1> Not found please try again </h1>\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : <h1> Not found please try again </h1>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country.Slug}>{country.Country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of recoveries from COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;","import React, { Component } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        return (\r\n            <AppBar\r\n            position =\"fixed\"\r\n            style ={{\r\n                backgroundColor: '#0e3d52',\r\n                boxShadow:'none',\r\n                padding: '10px 0px',\r\n                fontSize: '35px',\r\n\r\n            }}\r\n            >\r\n            <Toolbar>\r\n                <div className =\"header_logo\">\r\n                    <div classname = \"font_righteous header_logo_covid19\">Coronavirus Tracker</div>\r\n                </div>\r\n            </Toolbar>\r\n            </AppBar>\r\n    \r\n        )\r\n    }\r\n}\r\nexport default Header;\r\n\r\n","import React  from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <div className =\"Footer\">\r\n        <div className =\"column\">\r\n          <p>© Itunu Olurin 2020</p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './Components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n\n  \n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  \n    \n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <Header/>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2v497\",\"card\":\"Cards_card__1wVDE\",\"infected\":\"Cards_infected__2Z1w3\",\"recovered\":\"Cards_recovered__2wzHe\",\"deaths\":\"Cards_deaths__1gXPq\"};"],"sourceRoot":""}